/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/J3gVNoNZSLz
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useMemo } from "react"
import { Input } from "@/components/ui/input"
import { Accordion, AccordionItem, AccordionTrigger, AccordionContent } from "@/components/ui/accordion"
import { Label } from "@/components/ui/label"
import { Checkbox } from "@/components/ui/checkbox"
import { Card } from "@/components/ui/card"
import Link from "next/link"

export function FindDreamJob() {
  const [searchQuery, setSearchQuery] = useState("")
  const [filters, setFilters] = useState({
    jobType: [],
    industry: [],
    salaryRange: [],
  })
  const jobs = [
    {
      id: 1,
      title: "",
      company: "",
      location: "",
      type: "",
      industry: "",
      salary: "",
    }
  ]
  const filteredJobs = useMemo(() => {
    return jobs.filter((job) => {
      const searchMatch =
        job.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
        job.company.toLowerCase().includes(searchQuery.toLowerCase()) ||
        job.location.toLowerCase().includes(searchQuery.toLowerCase())
      const typeMatch = filters.jobType.length === 0 || filters.jobType.includes(job.type)
      const industryMatch = filters.industry.length === 0 || filters.industry.includes(job.industry)
      const salaryMatch =
        filters.salaryRange.length === 0 ||
        filters.salaryRange.some((range) => {
          const [min, max] = range.split("-").map(Number)
          return (
            job.salary.startsWith("$") &&
            Number(job.salary.slice(1).split("-")[0]) >= min &&
            Number(job.salary.slice(1).split("-")[1]) <= max
          )
        })
      return searchMatch && typeMatch && industryMatch && salaryMatch
    })
  }, [searchQuery, filters])
  const handleSearchChange = (e) => {
    setSearchQuery(e.target.value)
  }
  const handleFilterChange = (type, value) => {
    setFilters((prevFilters) => ({
      ...prevFilters,
      [type]: prevFilters[type].includes(value)
        ? prevFilters[type].filter((item) => item !== value)
        : [...prevFilters[type], value],
    }))
  }
  return (
    <div className="container mx-auto px-4 py-8 md:px-6 lg:px-8">
      <div className="mb-8">
        <h1 className="text-3xl font-bold mb-2">Find Your Dream Job</h1>
        <p className="text-muted-foreground">Search and apply for the best job opportunities.</p>
      </div>
      <div className="mb-8">
        <div className="flex items-center mb-4">
          <SearchIcon className="w-5 h-5 mr-2 text-muted-foreground" />
          <Input
            type="text"
            placeholder="Job title, company, or location"
            value={searchQuery}
            onChange={handleSearchChange}
            className="flex-1 bg-muted px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
          />
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <Accordion type="single" collapsible>
            <AccordionItem value="job-type">
              <AccordionTrigger className="text-base font-medium">Job Type</AccordionTrigger>
              <AccordionContent>
                <div className="grid gap-2">
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.jobType.includes("Full-time")}
                      onCheckedChange={() => handleFilterChange("jobType", "Full-time")}
                    />
                    Full-time
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.jobType.includes("Part-time")}
                      onCheckedChange={() => handleFilterChange("jobType", "Part-time")}
                    />
                    Part-time
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.jobType.includes("Contract")}
                      onCheckedChange={() => handleFilterChange("jobType", "Contract")}
                    />
                    Contract
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.jobType.includes("Internship")}
                      onCheckedChange={() => handleFilterChange("jobType", "Internship")}
                    />
                    Internship
                  </Label>
                </div>
              </AccordionContent>
            </AccordionItem>
          </Accordion>
          <Accordion type="single" collapsible>
            <AccordionItem value="industry">
              <AccordionTrigger className="text-base font-medium">Industry</AccordionTrigger>
              <AccordionContent>
                <div className="grid gap-2">
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.industry.includes("Technology")}
                      onCheckedChange={() => handleFilterChange("industry", "Technology")}
                    />
                    Technology
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.industry.includes("Advertising")}
                      onCheckedChange={() => handleFilterChange("industry", "Advertising")}
                    />
                    Advertising
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.industry.includes("Design")}
                      onCheckedChange={() => handleFilterChange("industry", "Design")}
                    />
                    Design
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.industry.includes("Finance")}
                      onCheckedChange={() => handleFilterChange("industry", "Finance")}
                    />
                    Finance
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.industry.includes("Consulting")}
                      onCheckedChange={() => handleFilterChange("industry", "Consulting")}
                    />
                    Consulting
                  </Label>
                </div>
              </AccordionContent>
            </AccordionItem>
          </Accordion>
          <Accordion type="single" collapsible>
            <AccordionItem value="salary-range">
              <AccordionTrigger className="text-base font-medium">Salary Range</AccordionTrigger>
              <AccordionContent>
                <div className="grid gap-2">
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.salaryRange.includes("50000-75000")}
                      onCheckedChange={() => handleFilterChange("salaryRange", "50000-75000")}
                    />
                    $50,000 - $75,000
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.salaryRange.includes("75000-100000")}
                      onCheckedChange={() => handleFilterChange("salaryRange", "75000-100000")}
                    />
                    $75,000 - $100,000
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.salaryRange.includes("100000-150000")}
                      onCheckedChange={() => handleFilterChange("salaryRange", "100000-150000")}
                    />
                    $100,000 - $150,000
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.salaryRange.includes("150000-200000")}
                      onCheckedChange={() => handleFilterChange("salaryRange", "150000-200000")}
                    />
                    $150,000 - $200,000
                  </Label>
                </div>
              </AccordionContent>
            </AccordionItem>
          </Accordion>
        </div>
      </div>
      <div className="mb-8">
        <h2 className="text-2xl font-bold mb-4">Job Listings</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredJobs.map((job) => (
            <Card key={job.id} className="bg-muted p-4 rounded-md shadow-sm">
              <div className="mb-4">
                <h3 className="text-xl font-bold">{job.title}</h3>
                <p className="text-muted-foreground">{job.company}</p>
              </div>
              <div className="mb-4">
                <p className="text-muted-foreground">{job.location}</p>
                <p className="text-muted-foreground">{job.salary}</p>
              </div>
              <div>
                <p className="text-muted-foreground">{job.type}</p>
                <p className="text-muted-foreground">{job.industry}</p>
              </div>
            </Card>
          ))}
        </div>
      </div>
      <div className="mb-8">
        <h2 className="text-2xl font-bold mb-4">Career Resources</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <Card className="bg-muted p-4 rounded-md shadow-sm">
            <div className="mb-4">
              <h3 className="text-xl font-bold">Resume Building</h3>
              <p className="text-muted-foreground">Learn how to create a standout resume.</p>
            </div>
            <Link
              href="#"
              className="inline-flex items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground shadow transition-colors hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              prefetch={false}
            >
              Read More
            </Link>
          </Card>
          <Card className="bg-muted p-4 rounded-md shadow-sm">
            <div className="mb-4">
              <h3 className="text-xl font-bold">Interview Prep</h3>
              <p className="text-muted-foreground">Get tips and strategies for your next interview.</p>
            </div>
            <Link
              href="#"
              className="inline-flex items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground shadow transition-colors hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              prefetch={false}
            >
              Read More
            </Link>
          </Card>
          <Card className="bg-muted p-4 rounded-md shadow-sm">
            <div className="mb-4">
              <h3 className="text-xl font-bold">Career Advice</h3>
              <p className="text-muted-foreground">Explore articles and guides for your career growth.</p>
            </div>
            <Link
              href="#"
              className="inline-flex items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground shadow transition-colors hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              prefetch={false}
            >
              Read More
            </Link>
          </Card>
        </div>
      </div>
    </div>
  )
}

function SearchIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  )
}


function XIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
